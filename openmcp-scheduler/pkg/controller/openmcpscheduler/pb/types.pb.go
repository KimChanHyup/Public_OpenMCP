// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package openmcpgrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//HiRequest 메세지는 문자열 name 하나를 가지고 있음
type PriorityRequest struct {
	Policy               string   `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriorityRequest) Reset()         { *m = PriorityRequest{} }
func (m *PriorityRequest) String() string { return proto.CompactTextString(m) }
func (*PriorityRequest) ProtoMessage()    {}
func (*PriorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

func (m *PriorityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriorityRequest.Unmarshal(m, b)
}
func (m *PriorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriorityRequest.Marshal(b, m, deterministic)
}
func (m *PriorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriorityRequest.Merge(m, src)
}
func (m *PriorityRequest) XXX_Size() int {
	return xxx_messageInfo_PriorityRequest.Size(m)
}
func (m *PriorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PriorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PriorityRequest proto.InternalMessageInfo

func (m *PriorityRequest) GetPolicy() string {
	if m != nil {
		return m.Policy
	}
	return ""
}

//HiReply 메세지는 문자열 message 하나를 가지고 있음
type PriorityReply struct {
	List                 map[string]float64 `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PriorityReply) Reset()         { *m = PriorityReply{} }
func (m *PriorityReply) String() string { return proto.CompactTextString(m) }
func (*PriorityReply) ProtoMessage()    {}
func (*PriorityReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

func (m *PriorityReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriorityReply.Unmarshal(m, b)
}
func (m *PriorityReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriorityReply.Marshal(b, m, deterministic)
}
func (m *PriorityReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriorityReply.Merge(m, src)
}
func (m *PriorityReply) XXX_Size() int {
	return xxx_messageInfo_PriorityReply.Size(m)
}
func (m *PriorityReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PriorityReply.DiscardUnknown(m)
}

var xxx_messageInfo_PriorityReply proto.InternalMessageInfo

func (m *PriorityReply) GetList() map[string]float64 {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*PriorityRequest)(nil), "openmcpgrpc.PriorityRequest")
	proto.RegisterType((*PriorityReply)(nil), "openmcpgrpc.PriorityReply")
	proto.RegisterMapType((map[string]float64)(nil), "openmcpgrpc.PriorityReply.ListEntry")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xce, 0x2f, 0x48, 0xcd, 0xcb, 0x4d, 0x2e,
	0x48, 0x2f, 0x2a, 0x48, 0x56, 0xd2, 0xe4, 0xe2, 0x0f, 0x28, 0xca, 0xcc, 0x2f, 0xca, 0x2c, 0xa9,
	0x0c, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe3, 0x62, 0x2b, 0xc8, 0xcf, 0xc9, 0x4c,
	0xae, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x94, 0x9a, 0x18, 0xb9, 0x78, 0x11,
	0x6a, 0x0b, 0x72, 0x2a, 0x85, 0x2c, 0xb8, 0x58, 0x72, 0x32, 0x8b, 0x4b, 0x24, 0x18, 0x15, 0x98,
	0x35, 0xb8, 0x8d, 0x54, 0xf4, 0x90, 0x0c, 0xd6, 0x43, 0x51, 0xa9, 0xe7, 0x93, 0x59, 0x5c, 0xe2,
	0x9a, 0x57, 0x52, 0x54, 0x19, 0x04, 0xd6, 0x21, 0x65, 0xce, 0xc5, 0x09, 0x17, 0x12, 0x12, 0xe0,
	0x62, 0xce, 0x4e, 0x85, 0xd9, 0x06, 0x62, 0x0a, 0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6,
	0x4a, 0x30, 0x29, 0x30, 0x6a, 0x30, 0x06, 0x41, 0x38, 0x56, 0x4c, 0x16, 0x8c, 0x46, 0xb1, 0x5c,
	0x3c, 0x30, 0x93, 0x41, 0x06, 0x08, 0xf9, 0x72, 0xf1, 0xbb, 0xa7, 0x96, 0xa0, 0x08, 0xc9, 0xe0,
	0x70, 0x07, 0xd8, 0x77, 0x52, 0x52, 0xb8, 0x5d, 0xa9, 0xc4, 0x90, 0xc4, 0x06, 0x0e, 0x22, 0x63,
	0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0x7a, 0x9f, 0x8e, 0x31, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PriorityListClient is the client API for PriorityList service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PriorityListClient interface {
	GetPriorityList(ctx context.Context, in *PriorityRequest, opts ...grpc.CallOption) (*PriorityReply, error)
}

type priorityListClient struct {
	cc *grpc.ClientConn
}

func NewPriorityListClient(cc *grpc.ClientConn) PriorityListClient {
	return &priorityListClient{cc}
}

func (c *priorityListClient) GetPriorityList(ctx context.Context, in *PriorityRequest, opts ...grpc.CallOption) (*PriorityReply, error) {
	out := new(PriorityReply)
	err := c.cc.Invoke(ctx, "/openmcpgrpc.PriorityList/GetPriorityList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PriorityListServer is the server API for PriorityList service.
type PriorityListServer interface {
	GetPriorityList(context.Context, *PriorityRequest) (*PriorityReply, error)
}

// UnimplementedPriorityListServer can be embedded to have forward compatible implementations.
type UnimplementedPriorityListServer struct {
}

func (*UnimplementedPriorityListServer) GetPriorityList(ctx context.Context, req *PriorityRequest) (*PriorityReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPriorityList not implemented")
}

func RegisterPriorityListServer(s *grpc.Server, srv PriorityListServer) {
	s.RegisterService(&_PriorityList_serviceDesc, srv)
}

func _PriorityList_GetPriorityList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PriorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriorityListServer).GetPriorityList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openmcpgrpc.PriorityList/GetPriorityList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriorityListServer).GetPriorityList(ctx, req.(*PriorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PriorityList_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openmcpgrpc.PriorityList",
	HandlerType: (*PriorityListServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPriorityList",
			Handler:    _PriorityList_GetPriorityList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types.proto",
}
