// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"resource-controller/apis/keti/v1alpha1.OpenMCPDeployment":             schema_pkg_apis_keti_v1alpha1_OpenMCPDeployment(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPDeploymentSpec":         schema_pkg_apis_keti_v1alpha1_OpenMCPDeploymentSpec(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPDeploymentStatus":       schema_pkg_apis_keti_v1alpha1_OpenMCPDeploymentStatus(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPIngress":                schema_pkg_apis_keti_v1alpha1_OpenMCPIngress(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPIngressSpec":            schema_pkg_apis_keti_v1alpha1_OpenMCPIngressSpec(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPIngressStatus":          schema_pkg_apis_keti_v1alpha1_OpenMCPIngressStatus(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPService":                schema_pkg_apis_keti_v1alpha1_OpenMCPService(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPServiceSpec":            schema_pkg_apis_keti_v1alpha1_OpenMCPServiceSpec(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPServiceStatus":          schema_pkg_apis_keti_v1alpha1_OpenMCPServiceStatus(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPHybridAutoScaler":       schema_pkg_apis_keti_v1alpha1_OpenMCPHybridAutoScaler(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPHybridAutoScalerSpec":   schema_pkg_apis_keti_v1alpha1_OpenMCPHybridAutoScalerSpec(ref),
		"resource-controller/apis/keti/v1alpha1.OpenMCPHybridAutoScalerStatus": schema_pkg_apis_keti_v1alpha1_OpenMCPHybridAutoScalerStatus(ref),
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPDeployment(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPDeployment is the Schema for the openmcpdeployments API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("resource-controller/apis/keti/v1alpha1.OpenMCPDeploymentSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("resource-controller/apis/keti/v1alpha1.OpenMCPDeploymentStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "resource-controller/apis/keti/v1alpha1.OpenMCPDeploymentSpec", "resource-controller/apis/keti/v1alpha1.OpenMCPDeploymentStatus"},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPDeploymentSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPDeploymentSpec defines the desired state of OpenMCPDeployment",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPDeploymentStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPDeploymentStatus defines the observed state of OpenMCPDeployment",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPIngress(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPIngress is the Schema for the openmcpingresss API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("resource-controller/apis/keti/v1alpha1.OpenMCPIngressSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("resource-controller/apis/keti/v1alpha1.OpenMCPIngressStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "resource-controller/apis/keti/v1alpha1.OpenMCPIngressSpec", "resource-controller/apis/keti/v1alpha1.OpenMCPIngressStatus"},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPIngressSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPIngressSpec defines the desired state of OpenMCPIngress",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPIngressStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPIngressStatus defines the observed state of OpenMCPIngress",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPService(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPService is the Schema for the openmcpservices API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("resource-controller/apis/keti/v1alpha1.OpenMCPServiceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("resource-controller/apis/keti/v1alpha1.OpenMCPServiceStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "resource-controller/apis/keti/v1alpha1.OpenMCPServiceSpec", "resource-controller/apis/keti/v1alpha1.OpenMCPServiceStatus"},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPServiceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPServiceSpec defines the desired state of OpenMCPService",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPServiceStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPServiceStatus defines the observed state of OpenMCPService",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPHybridAutoScaler(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPHybridAutoScaler is the Schema for the openmcphybridautoscalers API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("resource-controller/apis/keti/v1alpha1.OpenMCPHybridAutoScalerSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("resource-controller/apis/keti/v1alpha1.OpenMCPHybridAutoScalerStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "resource-controller/apis/keti/v1alpha1.OpenMCPHybridAutoScalerSpec", "resource-controller/apis/keti/v1alpha1.OpenMCPHybridAutoScalerStatus"},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPHybridAutoScalerSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPHybridAutoScalerSpec defines the desired state of OpenMCPHybridAutoScaler",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_keti_v1alpha1_OpenMCPHybridAutoScalerStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPHybridAutoScalerStatus defines the observed state of OpenMCPHybridAutoScaler",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
