// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: generated.proto

package any

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matricsbatchs []*MetricsBatch `protobuf:"bytes,1,rep,name=Matricsbatchs,proto3" json:"Matricsbatchs,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{0}
}

func (x *Collection) GetMatricsbatchs() []*MetricsBatch {
	if x != nil {
		return x.Matricsbatchs
	}
	return nil
}

type MetricsBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IP   string             `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Node *NodeMetricsPoint  `protobuf:"bytes,2,opt,name=Node,proto3" json:"Node,omitempty"`
	Pods []*PodMetricsPoint `protobuf:"bytes,3,rep,name=Pods,proto3" json:"Pods,omitempty"`
}

func (x *MetricsBatch) Reset() {
	*x = MetricsBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsBatch) ProtoMessage() {}

func (x *MetricsBatch) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsBatch.ProtoReflect.Descriptor instead.
func (*MetricsBatch) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{1}
}

func (x *MetricsBatch) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *MetricsBatch) GetNode() *NodeMetricsPoint {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *MetricsBatch) GetPods() []*PodMetricsPoint {
	if x != nil {
		return x.Pods
	}
	return nil
}

type NodeMetricsPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	MP   *MetricsPoint `protobuf:"bytes,2,opt,name=MP,proto3" json:"MP,omitempty"`
}

func (x *NodeMetricsPoint) Reset() {
	*x = NodeMetricsPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMetricsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMetricsPoint) ProtoMessage() {}

func (x *NodeMetricsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMetricsPoint.ProtoReflect.Descriptor instead.
func (*NodeMetricsPoint) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{2}
}

func (x *NodeMetricsPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeMetricsPoint) GetMP() *MetricsPoint {
	if x != nil {
		return x.MP
	}
	return nil
}

type PodMetricsPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Namespace  string                   `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	MP         *MetricsPoint            `protobuf:"bytes,3,opt,name=MP,proto3" json:"MP,omitempty"`
	Containers []*ContainerMetricsPoint `protobuf:"bytes,4,rep,name=Containers,proto3" json:"Containers,omitempty"`
}

func (x *PodMetricsPoint) Reset() {
	*x = PodMetricsPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodMetricsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodMetricsPoint) ProtoMessage() {}

func (x *PodMetricsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodMetricsPoint.ProtoReflect.Descriptor instead.
func (*PodMetricsPoint) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{3}
}

func (x *PodMetricsPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodMetricsPoint) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PodMetricsPoint) GetMP() *MetricsPoint {
	if x != nil {
		return x.MP
	}
	return nil
}

func (x *PodMetricsPoint) GetContainers() []*ContainerMetricsPoint {
	if x != nil {
		return x.Containers
	}
	return nil
}

type ContainerMetricsPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	MP   *MetricsPoint `protobuf:"bytes,2,opt,name=MP,proto3" json:"MP,omitempty"`
}

func (x *ContainerMetricsPoint) Reset() {
	*x = ContainerMetricsPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerMetricsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerMetricsPoint) ProtoMessage() {}

func (x *ContainerMetricsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerMetricsPoint.ProtoReflect.Descriptor instead.
func (*ContainerMetricsPoint) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{4}
}

func (x *ContainerMetricsPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerMetricsPoint) GetMP() *MetricsPoint {
	if x != nil {
		return x.MP
	}
	return nil
}

type MetricsPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp      *Any `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	CpuUsage       *Any `protobuf:"bytes,2,opt,name=CpuUsage,proto3" json:"CpuUsage,omitempty"`
	MemoryUsage    *Any `protobuf:"bytes,3,opt,name=MemoryUsage,proto3" json:"MemoryUsage,omitempty"`
	NetworkRxUsage *Any `protobuf:"bytes,4,opt,name=NetworkRxUsage,proto3" json:"NetworkRxUsage,omitempty"`
	NetworkTxUsage *Any `protobuf:"bytes,5,opt,name=NetworkTxUsage,proto3" json:"NetworkTxUsage,omitempty"`
	FsUsage        *Any `protobuf:"bytes,6,opt,name=FsUsage,proto3" json:"FsUsage,omitempty"`
}

func (x *MetricsPoint) Reset() {
	*x = MetricsPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsPoint) ProtoMessage() {}

func (x *MetricsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsPoint.ProtoReflect.Descriptor instead.
func (*MetricsPoint) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{5}
}

func (x *MetricsPoint) GetTimestamp() *Any {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MetricsPoint) GetCpuUsage() *Any {
	if x != nil {
		return x.CpuUsage
	}
	return nil
}

func (x *MetricsPoint) GetMemoryUsage() *Any {
	if x != nil {
		return x.MemoryUsage
	}
	return nil
}

func (x *MetricsPoint) GetNetworkRxUsage() *Any {
	if x != nil {
		return x.NetworkRxUsage
	}
	return nil
}

func (x *MetricsPoint) GetNetworkTxUsage() *Any {
	if x != nil {
		return x.NetworkTxUsage
	}
	return nil
}

func (x *MetricsPoint) GetFsUsage() *Any {
	if x != nil {
		return x.FsUsage
	}
	return nil
}

type ReturnValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick        int64  `protobuf:"varint,1,opt,name=Tick,proto3" json:"Tick,omitempty"`
	ClusterName string `protobuf:"bytes,2,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
}

func (x *ReturnValue) Reset() {
	*x = ReturnValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnValue) ProtoMessage() {}

func (x *ReturnValue) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnValue.ProtoReflect.Descriptor instead.
func (*ReturnValue) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{6}
}

func (x *ReturnValue) GetTick() int64 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *ReturnValue) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

var File_generated_proto protoreflect.FileDescriptor

var file_generated_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x63, 0x73, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x0d, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x63, 0x73, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x73, 0x22, 0x7d, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x50, 0x12, 0x2e, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x50, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x6f, 0x64, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x50, 0x6f, 0x64,
	0x73, 0x22, 0x4e, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x4d, 0x50, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x4d,
	0x50, 0x22, 0xac, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x4d, 0x50, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x4d, 0x50, 0x12,
	0x3f, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x22, 0x53, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x02, 0x4d, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x02, 0x4d, 0x50, 0x22, 0xd8, 0x02, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x70,
	0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x08, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0b,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x78, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x78, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x07, 0x46, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x46, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x43, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54,
	0x69, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x4b, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x00, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_generated_proto_rawDescOnce sync.Once
	file_generated_proto_rawDescData = file_generated_proto_rawDesc
)

func file_generated_proto_rawDescGZIP() []byte {
	file_generated_proto_rawDescOnce.Do(func() {
		file_generated_proto_rawDescData = protoimpl.X.CompressGZIP(file_generated_proto_rawDescData)
	})
	return file_generated_proto_rawDescData
}

var file_generated_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_generated_proto_goTypes = []interface{}{
	(*Collection)(nil),            // 0: protobuf.Collection
	(*MetricsBatch)(nil),          // 1: protobuf.MetricsBatch
	(*NodeMetricsPoint)(nil),      // 2: protobuf.NodeMetricsPoint
	(*PodMetricsPoint)(nil),       // 3: protobuf.PodMetricsPoint
	(*ContainerMetricsPoint)(nil), // 4: protobuf.ContainerMetricsPoint
	(*MetricsPoint)(nil),          // 5: protobuf.MetricsPoint
	(*ReturnValue)(nil),           // 6: protobuf.ReturnValue
	(*Any)(nil),                   // 7: google.protobuf.Any
}
var file_generated_proto_depIdxs = []int32{
	1,  // 0: protobuf.Collection.Matricsbatchs:type_name -> protobuf.MetricsBatch
	2,  // 1: protobuf.MetricsBatch.Node:type_name -> protobuf.NodeMetricsPoint
	3,  // 2: protobuf.MetricsBatch.Pods:type_name -> protobuf.PodMetricsPoint
	5,  // 3: protobuf.NodeMetricsPoint.MP:type_name -> protobuf.MetricsPoint
	5,  // 4: protobuf.PodMetricsPoint.MP:type_name -> protobuf.MetricsPoint
	4,  // 5: protobuf.PodMetricsPoint.Containers:type_name -> protobuf.ContainerMetricsPoint
	5,  // 6: protobuf.ContainerMetricsPoint.MP:type_name -> protobuf.MetricsPoint
	7,  // 7: protobuf.MetricsPoint.Timestamp:type_name -> google.protobuf.Any
	7,  // 8: protobuf.MetricsPoint.CpuUsage:type_name -> google.protobuf.Any
	7,  // 9: protobuf.MetricsPoint.MemoryUsage:type_name -> google.protobuf.Any
	7,  // 10: protobuf.MetricsPoint.NetworkRxUsage:type_name -> google.protobuf.Any
	7,  // 11: protobuf.MetricsPoint.NetworkTxUsage:type_name -> google.protobuf.Any
	7,  // 12: protobuf.MetricsPoint.FsUsage:type_name -> google.protobuf.Any
	0,  // 13: protobuf.SendMetrics.SendMetrics:input_type -> protobuf.Collection
	6,  // 14: protobuf.SendMetrics.SendMetrics:output_type -> protobuf.ReturnValue
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_generated_proto_init() }
func file_generated_proto_init() {
	if File_generated_proto != nil {
		return
	}
	file_google_protobuf_any_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_generated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMetricsPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodMetricsPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerMetricsPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_generated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_generated_proto_goTypes,
		DependencyIndexes: file_generated_proto_depIdxs,
		MessageInfos:      file_generated_proto_msgTypes,
	}.Build()
	File_generated_proto = out.File
	file_generated_proto_rawDesc = nil
	file_generated_proto_goTypes = nil
	file_generated_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SendMetricsClient is the client API for SendMetrics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SendMetricsClient interface {
	SendMetrics(ctx context.Context, in *Collection, opts ...grpc.CallOption) (*ReturnValue, error)
}

type sendMetricsClient struct {
	cc grpc.ClientConnInterface
}

func NewSendMetricsClient(cc grpc.ClientConnInterface) SendMetricsClient {
	return &sendMetricsClient{cc}
}

func (c *sendMetricsClient) SendMetrics(ctx context.Context, in *Collection, opts ...grpc.CallOption) (*ReturnValue, error) {
	out := new(ReturnValue)
	err := c.cc.Invoke(ctx, "/protobuf.SendMetrics/SendMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SendMetricsServer is the server API for SendMetrics service.
type SendMetricsServer interface {
	SendMetrics(context.Context, *Collection) (*ReturnValue, error)
}

// UnimplementedSendMetricsServer can be embedded to have forward compatible implementations.
type UnimplementedSendMetricsServer struct {
}

func (*UnimplementedSendMetricsServer) SendMetrics(context.Context, *Collection) (*ReturnValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMetrics not implemented")
}

func RegisterSendMetricsServer(s *grpc.Server, srv SendMetricsServer) {
	s.RegisterService(&_SendMetrics_serviceDesc, srv)
}

func _SendMetrics_SendMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Collection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendMetricsServer).SendMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.SendMetrics/SendMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendMetricsServer).SendMetrics(ctx, req.(*Collection))
	}
	return interceptor(ctx, in, info, handler)
}

var _SendMetrics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.SendMetrics",
	HandlerType: (*SendMetricsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMetrics",
			Handler:    _SendMetrics_SendMetrics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "generated.proto",
}
